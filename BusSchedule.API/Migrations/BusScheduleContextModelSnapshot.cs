// <auto-generated />
using System;
using BusSchedule.API.DbContext;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace BusSchedule.API.Migrations
{
    [DbContext(typeof(BusScheduleContext))]
    partial class BusScheduleContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "7.0.1");

            modelBuilder.Entity("BusSchedule.API.Entities.Bus", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(15)
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Buses");
                });

            modelBuilder.Entity("BusSchedule.API.Entities.Route", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int?>("BusId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("BusId");

                    b.ToTable("Routes");
                });

            modelBuilder.Entity("BusSchedule.API.Entities.Stop", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(15)
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Stops");
                });

            modelBuilder.Entity("BusSchedule.API.Entities.StopOrder", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("Order")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("RouteId")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("StopId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("RouteId");

                    b.HasIndex("StopId");

                    b.ToTable("StopOrders");
                });

            modelBuilder.Entity("BusSchedule.API.Entities.TimeTable", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int?>("BusId")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("StopId")
                        .HasColumnType("INTEGER");

                    b.Property<TimeOnly?>("Time")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("BusId");

                    b.HasIndex("StopId");

                    b.ToTable("TimeTables");
                });

            modelBuilder.Entity("BusSchedule.API.Entities.Route", b =>
                {
                    b.HasOne("BusSchedule.API.Entities.Bus", "Bus")
                        .WithMany()
                        .HasForeignKey("BusId");

                    b.Navigation("Bus");
                });

            modelBuilder.Entity("BusSchedule.API.Entities.StopOrder", b =>
                {
                    b.HasOne("BusSchedule.API.Entities.Route", null)
                        .WithMany("StopOrders")
                        .HasForeignKey("RouteId");

                    b.HasOne("BusSchedule.API.Entities.Stop", "Stop")
                        .WithMany()
                        .HasForeignKey("StopId");

                    b.Navigation("Stop");
                });

            modelBuilder.Entity("BusSchedule.API.Entities.TimeTable", b =>
                {
                    b.HasOne("BusSchedule.API.Entities.Bus", "Bus")
                        .WithMany()
                        .HasForeignKey("BusId");

                    b.HasOne("BusSchedule.API.Entities.Stop", "Stop")
                        .WithMany()
                        .HasForeignKey("StopId");

                    b.Navigation("Bus");

                    b.Navigation("Stop");
                });

            modelBuilder.Entity("BusSchedule.API.Entities.Route", b =>
                {
                    b.Navigation("StopOrders");
                });
#pragma warning restore 612, 618
        }
    }
}
